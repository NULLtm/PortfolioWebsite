{"ast":null,"code":"var _jsxFileName = \"/Users/owenboseley/Documents/GitHub/PortfolioWebsite/src/pages/Links.js\";\nimport \"../styles/Links.css\";\nimport Sketch from \"react-p5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar myParticles = [];\nvar mySprings = [];\nvar nPoints = 12;\n\n// The index in the particle array, of the one the user has clicked.\nvar whichParticleIsGrabbed = -1;\n\n//-------------------------\nfunction createParticles(p5) {\n  for (var i = 0; i < nPoints; i++) {\n    var rx = p5.map(i, 0, nPoints, 250, 400);\n    var ry = 0;\n    var aParticle = new Particle();\n    aParticle.set(rx, ry);\n    aParticle.bPeriodicBoundaries = false;\n    aParticle.bHardBoundaries = true;\n    if (i == 0) aParticle.bFixed = true;\n    myParticles.push(aParticle);\n  }\n}\n\n//-------------------------\nfunction createSpringMeshConnectingParticles() {\n  // Stitch the particles together into a mesh,\n  // by connecting them to their neighbors with springs.\n\n  // The spring constant.\n  var K = 0.1;\n\n  // stitch the particles together into a blob.\n  for (var i = 0; i < nPoints - 1; i++) {\n    var p = myParticles[i];\n    var q = myParticles[i + 1];\n    var aSpring = new Spring();\n    aSpring.set(p, q, K);\n    mySprings.push(aSpring);\n  }\n}\nfunction mousePressed(p5) {\n  // If the mouse is pressed,\n  // find the closest particle, and store its index.\n  whichParticleIsGrabbed = -1;\n  var maxDist = 9999;\n  for (var i = 0; i < myParticles.length; i++) {\n    var dx = p5.mouseX - myParticles[i].px;\n    var dy = p5.mouseY - myParticles[i].py;\n    var dh = p5.sqrt(dx * dx + dy * dy);\n    if (dh < maxDist) {\n      maxDist = dh;\n      if (i == nPoints - 1) whichParticleIsGrabbed = i;\n    }\n  }\n}\n\n//==========================================================\nvar Particle = function Particle(p5) {\n  this.px = 0;\n  this.py = 0;\n  this.vx = 0;\n  this.vy = 0;\n  this.mass = 1.0;\n  this.damping = 0.96;\n  this.bFixed = false;\n  this.bLimitVelocities = true;\n  this.bPeriodicBoundaries = false;\n  this.bHardBoundaries = false;\n\n  // Initializer for the Particle\n  this.set = function (x, y) {\n    this.px = x;\n    this.py = y;\n    this.vx = 0;\n    this.vy = 0;\n    this.damping = 0.96;\n    this.mass = 0.1;\n  };\n\n  // Add a force in. One step of Euler integration.\n  this.addForce = function (fx, fy) {\n    var ax = fx / this.mass;\n    var ay = fy / this.mass;\n    this.vx += ax;\n    this.vy += ay;\n  };\n\n  // Update the position. Another step of Euler integration.\n  this.update = function () {\n    if (this.bFixed == false) {\n      this.vx *= this.damping;\n      this.vy *= this.damping;\n      this.limitVelocities();\n      this.handleBoundaries();\n      this.px += this.vx;\n      this.py += this.vy;\n      this.addForce(0, this.mass);\n    }\n  };\n  this.limitVelocities = function () {\n    if (this.bLimitVelocities) {\n      var speed = this.p5.sqrt(this.vx * this.vx + this.vy * this.vy);\n      var maxSpeed = 10;\n      if (speed > maxSpeed) {\n        this.vx *= maxSpeed / speed;\n        this.vy *= maxSpeed / speed;\n      }\n    }\n  };\n  this.handleBoundaries = function () {\n    if (this.bPeriodicBoundaries) {\n      if (this.px > this.p5.width) this.px -= this.p5.width;\n      if (this.px < 0) this.px += this.p5.width;\n      if (this.py > this.p5.height) this.py -= this.p5.height;\n      if (this.py < 0) this.py += this.p5.height;\n    } else if (this.bHardBoundaries) {\n      if (this.px >= this.p5.width) {\n        this.vx = this.p5.abs(this.vx) * -1;\n      }\n      if (this.px <= 0) {\n        this.vx = this.p5.abs(this.vx);\n      }\n      if (this.py >= this.p5.height) {\n        this.vy = this.p5.abs(this.vy) * -1;\n      }\n      if (this.py <= 0) {\n        this.vy = this.p5.abs(this.vy);\n      }\n    }\n  };\n  this.render = function () {\n    this.p5.fill(255);\n    this.p5.ellipse(this.px, this.py, 9, 9);\n  };\n};\n\n//==========================================================\n_c = Particle;\nvar Spring = function Spring(p5) {\n  var p;\n  var q;\n  var restLength;\n  var springConstant;\n  this.set = function (p1, p2, k) {\n    p = p1;\n    q = p2;\n    var dx = p.px - q.px;\n    var dy = p.py - q.py;\n    restLength = this.p5.sqrt(dx * dx + dy * dy);\n    springConstant = k;\n  };\n  this.update = function () {\n    var dx = p.px - q.px;\n    var dy = p.py - q.py;\n    var dh = this.p5.sqrt(dx * dx + dy * dy);\n    if (dh > 1) {\n      var distention = dh - restLength;\n      var restorativeForce = springConstant * distention; // F = -kx\n      var fx = dx / dh * restorativeForce;\n      var fy = dy / dh * restorativeForce;\n      p.addForce(-fx, -fy);\n      q.addForce(fx, fy);\n    }\n  };\n  this.render = function () {\n    this.p5.stroke(255);\n    this.p5.line(p.px, p.py, q.px, q.py);\n  };\n};\n_c2 = Spring;\nconst Links = () => {\n  const setup = (p5, canvasParentRef) => {\n    // use parent to render the canvas in this ref\n    // (without that p5 will render the canvas outside of your component)\n    p5.createCanvas(500, 500).parent(canvasParentRef);\n    //createParticles();\n    //createSpringMeshConnectingParticles();\n  };\n\n  const draw = p5 => {\n    p5.background(0);\n\n    /*for (var i=0; i<myParticles.length; i++) {\n        myParticles[i].update(); // update all locations\n    }\n    if (p5.mouseIsPressed && (whichParticleIsGrabbed > -1)) {\n        // If the user is grabbing a particle, peg it to the mouse.\n        myParticles[whichParticleIsGrabbed].px = p5.mouseX;\n        myParticles[whichParticleIsGrabbed].py = p5.mouseY;\n    }\n     for (var i=0; i<mySprings.length; i++) {\n        mySprings[i].update(); // draw all springs\n    }\n     for (var i=0; i<mySprings.length; i++) {\n        mySprings[i].render(); // draw all springs\n    }*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page linksContainer\",\n    children: /*#__PURE__*/_jsxDEV(Sketch, {\n      className: \"linksContainer-linkCanvas\",\n      setup: setup,\n      draw: draw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Links;\nexport default Links;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Particle\");\n$RefreshReg$(_c2, \"Spring\");\n$RefreshReg$(_c3, \"Links\");","map":{"version":3,"names":["Sketch","myParticles","mySprings","nPoints","whichParticleIsGrabbed","createParticles","p5","i","rx","map","ry","aParticle","Particle","set","bPeriodicBoundaries","bHardBoundaries","bFixed","push","createSpringMeshConnectingParticles","K","p","q","aSpring","Spring","mousePressed","maxDist","length","dx","mouseX","px","dy","mouseY","py","dh","sqrt","vx","vy","mass","damping","bLimitVelocities","x","y","addForce","fx","fy","ax","ay","update","limitVelocities","handleBoundaries","speed","maxSpeed","width","height","abs","render","fill","ellipse","restLength","springConstant","p1","p2","k","distention","restorativeForce","stroke","line","Links","setup","canvasParentRef","createCanvas","parent","draw","background"],"sources":["/Users/owenboseley/Documents/GitHub/PortfolioWebsite/src/pages/Links.js"],"sourcesContent":["import \"../styles/Links.css\";\nimport Sketch from \"react-p5\";\n\nvar myParticles = [];\nvar mySprings = [];\nvar nPoints = 12;\n\n// The index in the particle array, of the one the user has clicked.\nvar whichParticleIsGrabbed = -1;\n\n//-------------------------\nfunction createParticles(p5){\n\n    for (var i=0; i<nPoints; i++) {\n        var rx = p5.map(i, 0,nPoints, 250,400);\n        var ry = 0;\n        var aParticle = new Particle();\n        aParticle.set(rx,ry);\n        aParticle.bPeriodicBoundaries = false;\n        aParticle.bHardBoundaries = true;\n        if(i==0) aParticle.bFixed = true;\n        myParticles.push(aParticle);\n    }\n\n}\n\n//-------------------------\nfunction createSpringMeshConnectingParticles(){\n    // Stitch the particles together into a mesh,\n    // by connecting them to their neighbors with springs.\n\n    // The spring constant.\n    var K = 0.1;\n\n    // stitch the particles together into a blob.\n    for (var i=0; i<(nPoints-1); i++) {\n        var p = myParticles[i];\n        var q = myParticles[i+1];\n        var aSpring = new Spring();\n        aSpring.set (p, q, K);\n        mySprings.push(aSpring);\n    }\n}\n\nfunction mousePressed(p5) {\n    // If the mouse is pressed,\n    // find the closest particle, and store its index.\n    whichParticleIsGrabbed = -1;\n    var maxDist = 9999;\n    for (var i=0; i<myParticles.length; i++) {\n        var dx = p5.mouseX - myParticles[i].px;\n        var dy = p5.mouseY - myParticles[i].py;\n        var dh = p5.sqrt(dx*dx + dy*dy);\n        if (dh < maxDist) {\n            maxDist = dh;\n            if(i==nPoints-1) whichParticleIsGrabbed = i;\n        }\n    }\n}\n\n\n//==========================================================\nvar Particle = function Particle(p5) {\n    this.px = 0;\n    this.py = 0;\n    this.vx = 0;\n    this.vy = 0;\n    this.mass = 1.0;\n    this.damping = 0.96;\n\n    this.bFixed = false;\n    this.bLimitVelocities = true;\n    this.bPeriodicBoundaries = false;\n    this.bHardBoundaries = false;\n\n\n    // Initializer for the Particle\n    this.set = function(x, y) {\n        this.px = x;\n        this.py = y;\n        this.vx = 0;\n        this.vy = 0;\n        this.damping = 0.96;\n        this.mass = 0.1;\n    };\n\n    // Add a force in. One step of Euler integration.\n    this.addForce = function(fx, fy) {\n        var ax = fx / this.mass;\n        var ay = fy / this.mass;\n        this.vx += ax;\n        this.vy += ay;\n    };\n\n    // Update the position. Another step of Euler integration.\n    this.update = function() {\n        if (this.bFixed == false){\n            this.vx *= this.damping;\n            this.vy *= this.damping;\n\n            this.limitVelocities();\n            this.handleBoundaries();\n            this.px += this.vx;\n            this.py += this.vy;\n\n            this.addForce(0, this.mass);\n        }\n    };\n\n    this.limitVelocities = function() {\n        if (this.bLimitVelocities) {\n            var speed = this.p5.sqrt(this.vx * this.vx + this.vy * this.vy);\n            var maxSpeed = 10;\n            if (speed > maxSpeed) {\n                this.vx *= maxSpeed / speed;\n                this.vy *= maxSpeed / speed;\n            }\n        }\n    };\n\n    this.handleBoundaries = function() {\n        if (this.bPeriodicBoundaries) {\n            if (this.px > this.p5.width) this.px -= this.p5.width;\n            if (this.px < 0) this.px += this.p5.width;\n            if (this.py > this.p5.height) this.py -= this.p5.height;\n            if (this.py < 0) this.py += this.p5.height;\n        } else if (this.bHardBoundaries) {\n            if (this.px >= this.p5.width){\n                this.vx = this.p5.abs(this.vx)*-1;\n            }\n            if (this.px <= 0){\n                this.vx = this.p5.abs(this.vx);\n            }\n            if (this.py >= this.p5.height){\n                this.vy = this.p5.abs(this.vy)*-1;\n            }\n            if (this.py <= 0){\n                this.vy = this.p5.abs(this.vy);\n            }\n        }\n    };\n\n    this.render = function() {\n        this.p5.fill(255);\n        this.p5.ellipse(this.px, this.py, 9, 9);\n    };\n}\n\n\n//==========================================================\nvar Spring = function Spring(p5) {\n    var p;\n    var q;\n    var restLength;\n    var springConstant;\n\n    this.set = function(p1, p2, k) {\n        p = p1;\n        q = p2;\n        var dx = p.px - q.px;\n        var dy = p.py - q.py;\n        restLength = this.p5.sqrt(dx * dx + dy * dy);\n        springConstant = k;\n    };\n\n    this.update = function() {\n        var dx = p.px - q.px;\n        var dy = p.py - q.py;\n        var dh = this.p5.sqrt(dx * dx + dy * dy);\n\n        if (dh > 1) {\n            var distention = dh - restLength;\n            var restorativeForce = springConstant * distention; // F = -kx\n            var fx = (dx / dh) * restorativeForce;\n            var fy = (dy / dh) * restorativeForce;\n            p.addForce(-fx, -fy);\n            q.addForce( fx,  fy);\n        }\n    };\n\n    this.render = function() {\n        this.p5.stroke(255);\n        this.p5.line(p.px, p.py, q.px, q.py);\n    };\n}\n\nconst Links = () => {\n\n    const setup = (p5, canvasParentRef) => {\n        // use parent to render the canvas in this ref\n        // (without that p5 will render the canvas outside of your component)\n        p5.createCanvas(500, 500).parent(canvasParentRef);\n        //createParticles();\n        //createSpringMeshConnectingParticles();\n    }\n\n    const draw = (p5) => {\n        p5.background (0);\n\n        /*for (var i=0; i<myParticles.length; i++) {\n            myParticles[i].update(); // update all locations\n        }\n        if (p5.mouseIsPressed && (whichParticleIsGrabbed > -1)) {\n            // If the user is grabbing a particle, peg it to the mouse.\n            myParticles[whichParticleIsGrabbed].px = p5.mouseX;\n            myParticles[whichParticleIsGrabbed].py = p5.mouseY;\n        }\n\n        for (var i=0; i<mySprings.length; i++) {\n            mySprings[i].update(); // draw all springs\n        }\n\n        for (var i=0; i<mySprings.length; i++) {\n            mySprings[i].render(); // draw all springs\n        }*/\n    }\n\n\n    return (\n        <div className=\"page linksContainer\">\n            <Sketch className=\"linksContainer-linkCanvas\" setup={setup} draw={draw}/>\n        </div>\n    );\n}\n\nexport default Links;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}